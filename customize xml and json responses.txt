to this topic we discuss two example 
1) for changing the response header values which is generated by the default formatter
2) for adding the new header to the response which are custom headers i.e are not 
   generated by the default formatter
   



example-1(for changing the response header values which is generated by the default formatter)
===============================================================================================
  

a) creating a custom json formatter and 
b) then finally finally we configuring this custom formatter to the json fomatter

customizing the json formatter response
=======================================
jsonFormatter is supporting the accept-type is "text/html" so 
where it will returning the content-type as "text/html"


but we want the response in such a manner
it will support accept-type as "text/html"
and then we are making the response content-type "applicaion/json"
instead of contetn-type:"text/html"


build in jsonformatter :-> 
will 
  make the content-type as same as accept-type if it support
 so this behaviour  we will be changed 


namespace creatingCustomWebApi.customMediaTypeFormatter
{
    public class customJsonFormatter:System.Net.Http.Formatting.JsonMediaTypeFormatter
    {
        public customJsonFormatter() {
            this.SupportedMediaTypes.Add(new MediaTypeHeaderValue("text/html"));
        }

        public override void SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)
        {

            base.SetDefaultContentHeaders(type, headers, mediaType);
            headers.ContentType = new MediaTypeHeaderValue("applicaiton/json");
		

        }
    }
}

-->
 public static class WebApiConfig
    {
        public static void Register(HttpConfiguration config)
        {
            // Web API configuration and services

            // Web API routes
            config.MapHttpAttributeRoutes();
            config.Routes.MapHttpRoute(
                name: "DefaultApi",
                routeTemplate: "api/{controller}/{id}",
                defaults: new { id = RouteParameter.Optional }
            );

            config.Formatters.Insert(0, new customMediaTypeFormatter.customJsonFormatter());

           //  var jsonformatter = config.Formatters.JsonFormatter;
           //  jsonformatter.SupportedMediaTypes.Add(new System.Net.Http.Headers.MediaTypeHeaderValue("text/html"));
           //   config.Formatters.Remove(xmlformatter);
        }
    }
}


example-2
==========

to add the custom header for the response below examples
............................................................

namespace creatingCustomWebApi.customMediaTypeFormatter
{
    public class customJsonFormatter:System.Net.Http.Formatting.JsonMediaTypeFormatter
    {
        public customJsonFormatter() {
            this.SupportedMediaTypes.Add(new MediaTypeHeaderValue("text/html"));
        }

        public override void SetDefaultContentHeaders(Type type, HttpContentHeaders headers, MediaTypeHeaderValue mediaType)
        {

            base.SetDefaultContentHeaders(type, headers, mediaType);
            headers.ContentType = new MediaTypeHeaderValue("applicaiton/json");

            headers.Add("X-modelType", "quote");


        }
    }
}